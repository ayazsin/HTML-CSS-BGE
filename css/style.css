@import url("https://fonts.googleapis.com/css2?family=Montserrat&display=swap");
@import url("https://fonts.googleapis.com/css2?family=Carattere&display=swap");
:root {
  --violetFonce: #52012f;
  --lavande: #764b8e;
}
* {
  /* div etiketleri için uyguladığımız 
  box-sizing:border-box özelliğinden dolayı 
  padding ve border değerlerinin kapladığı alan 
  hesaba katılmaz ve nesnelerin kapladığı alan sadece 
  verdiğimiz genişlik kadar olacaktır.  */
  box-sizing: border-box;
}
html {
  font-size: 55%; /* 62,5 = 10 px */
}

body {
  font-size: 1.6rem; /*16px*/
  line-height: 2;
  font-family: "Montserrat", sans-serif;
  margin: 0;
}

h1,
h2 {
  font-family: "Carattere", cursive;
}

h1 {
  font-size: 3.2rem;
}

h2 {
  font-size: 2.8rem;
}

a {
  text-decoration: none;
  color: var(--violetFonce);
  transition-property: color;
  transition-duration: 800ms;
  transition-timing-function: ease;
  /* transition: transition-property, transition-duration, transition-timing-function, transition-delay. */
}
a:hover {
  color: #fff;
}

ul {
  padding-left: 40px;
  margin: 20px 0;
}

img,
video,
iframe {
  max-width: 100%;
}
figure img {
  display: block;
  /* Display: block; Bir elementin kutu şeklinde alan 
  kaplamasını sağlayan kod parçasıdır. Kullanıldığı anda 
  element yeni bir satırdan başlar.
  Elementlerin block şeklinde davranmasını sağlayabiliriz. 
  Örneğin span etiketinin varsayılan display değeri inline'dır 
  ve ikitane span etiketi oluşturduğumuzda bunlar aynı 
  satırda yan yana görünür. Eğer span etiketininin display değeri 
  block olarak değiştirilirse span etiketleri sonrasında boşluk 
  bırakıp alt satıra geçecektir. */
}
/* -------------------- */
/* ------ CLASSES ----- */
/* ------------------- */
.flexContainer {
  display: flex;
  /* Flex, flexbox veya esnek kutu kullanımı için öncelikle elemanları 
  taşıyan bir taşıyıcının tanımlanması gerekir.
  Taşıyıcı elemanın display özelliğine flex veya inline-flex değerini 
  vererek tanımlanır. Taşıyıcı elemana tanımlanan flex özelliği taşıyıca 
  esneklik kazandırır.
  Böylece alt elemanlar taşıyıcı içerisinde kolay bir şekilde yerleştirilebilir 
  hale gelir. Varsayılan olarak elemanlar kapsayıcı içerisinde bir satır 
  boyunca yerleştirilir. */
}

/* ------------------ */
/* ------HEADER------ */
/* ------------------ */

header h1 {
  font-size: 6rem;
  opacity: 0;
  transform: translateY(-100px);
  animation: transOpacity 0.8s 1 normal 0.5s ease-in forwards;
  /* .css-animation-ornegi {
    animation-name: ornek-animasyon;
    animation-duration: 2s;
    animation-timing-function: ease;
    animation-delay: 0s;
    animation-iteration-count: 3;
        Animasyon tekrar sayısı. 3 olarak belirttiğimizde animasyon 
        3 defa çalışacaktır.
    animation-direction: normal;
        Animasyonun yönü. Varsayılan olarak animasyon, 
        baştan sonra doğru çalışacaktır. Örneğin, 
        sondan başa doğru çalışmasını istersek alternate 
        değerini kullanabiliriz.
    animation-fill-mode: none;  
        Animasyon bittikten sonraki süreç. 
        Örneğin backwards parametresini verdiğimizde, animasyon bitiminde, 
        animasyonun ilk karesindeki özellikler uygulanır.
} */
}

header p {
  opacity: 0;
  animation: transOpacity2 0.8s 1 normal 1s ease-in forwards;
}

@keyframes transOpacity {
  0% {
    opacity: 0;
    transform: translateY(-100px);
  }
  100% {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes transOpacity2 {
  0% {
    opacity: 0;
    transform: translateY(-100px);
  }
  100% {
    opacity: 1;
    transform: translateY(0);
  }
}

header {
  position: relative;
  /* Göreceli konumlandırma anlaşılması kolay bir konsepttir. 
  Bir elemente göreceli bir değer verdiğiniz de o bulunduğu yeri 
  dikkate alarak verilen değerleri uygulayacaktır. Bir elementin(göreceli) 
  başlangıç noktasını dikey ve yatay olarak değiştirebilriz. 
  Eğer biz elementin üst(top) değerine 20px tanımlarsak element 
  bulunduğu yerden 20px aşağıya kayacaktır, eğer elementin sol(left) 
  değerini 20px olarak tanımlarsak elementimiz soldan 20px sağa doğru 
  kayacaktır. */
  background-color: var(--lavande);
  min-height: 90vh;
  /* vh ise ekran yüksekliğinin 100/1'lik bir bölümüne denk geliyor. */
  /* vw birimi, yataydaki ekran boyutunun 100/1'ine denk gelen bir ölçü birimi. */
  background-image: url(../img/Bhpd8.jpg);
  background-repeat: no-repeat;
  background-position: center center;
  background-size: cover;
  background-blend-mode: lighten;
  flex-flow: column nowrap;
  /* Alt alta sirala */
  justify-content: space-between;
  /* iki yana dagit */
  align-items: center;
  /* strech yapmadan ortaya al */
}

/* addind content before and after */
header::before {
  content: "";
  display: block;
  position: absolute;
  /* Göreceli konumlandırma Normal Akış’ın bir parçasıdır. 
  Aksine Mutlak Konumlandırmada uygulanan elementin bulunduğu 
  yere boşluk bırakmayacaktır. Diğer elementler normal akıştaki yerlerini 
  bu elementi yoksayarak devam edeceklerdir.  */
  width: 100%;
  height: 100%;
  background-color: rgba(0, 0, 0, 0.5);
}

header h1,
header p {
  margin: 0;
}

header > * {
  position: relative;
}

img.logo {
  max-height: 150px;
}

header > div.flexContainer {
  justify-content: space-between;
  align-self: stretch;
}
/* The :last-of-type CSS pseudo-class represents the last 
element of its type among a group of sibling elements. */
header > div:last-of-type {
  color: #fff;
  text-align: center;
}

header > a.btn {
  background-color: #fff;
  padding: 1.5rem;
  border-radius: 10px;
  margin: 2rem;
}

/* ------- NAV --------- */

nav ul.flexContainer {
  padding: 60px 0 0 0;
  margin: 0;
  list-style: none;
  flex-direction: column;
  position: absolute;
  width: 100%;
  left: 0;
  top: 0;
  display: none;
  height: 100vh;
  z-index: 10;
  /* z-index değeri; aynı z-ekseninde bulunan(kapsayan elementler hariç) 
    katmanların altta mı üstte mi kalacağınız belirlemek için kullanılır.
    z-index sadece position değeri relative, absolute ve fixed olan nesnelere 
    uygulanır.
    Saydamlık değeri(opacity) 1’den küçük verilen nesnelerde z-index kullanımı 
    daha kolay anlaşılır.
    Konumlandırma uygulanmış elementlerde z-index etkileri
    Mevcut sıralama durumunda elementin sırasını belirler
    Elementin kendi kısmındaki durumun belirler
    Eğer z-index değeri atanmamış ise z-eksenindeki arkadan öne doğru 
    sıralama aşağıdaki gibidir:
    Normal akıştaki kutular koddaki sıraya göre sıralanır
    float uygulanmış kutular
    Konumlandırma uygulanmış elementlerde ise kodlamadaki sıraya göre */
  background-color: yellow;
}

nav ul.flexContainer.active {
  display: flex;
}

nav li {
  position: relative;
}

nav li::after {
  content: "";
  position: absolute;
  display: block;
  height: 70%;
  width: 2px;
  background-color: #000;
  top: 15%;
  right: 0;
}

nav li:last-child::after {
  display: none;
}

nav a {
  background-color: yellow;
  color: #000;
  padding: 1rem;
  display: block;
  transition: all 800ms ease;
}

nav a:hover {
  color: yellow;
  background-color: black;
}

/* ---------------------- */
/* ------ Hamburger ------ */
/* ---------------------- */

.hamburger {
  padding: 15px 15px;
  display: inline-block;
  cursor: pointer;
  transition-property: opacity, filter;
  transition-duration: 0.15s;
  transition-timing-function: linear;
  font: inherit;
  color: inherit;
  text-transform: none;
  background-color: transparent;
  border: 0;
  margin: 0;
  overflow: visible;
  position: relative;
  z-index: 20;
}
.hamburger:hover {
  opacity: 0.7;
}
.hamburger.is-active:hover {
  opacity: 0.7;
}
.hamburger.is-active .hamburger-inner,
.hamburger.is-active .hamburger-inner::before,
.hamburger.is-active .hamburger-inner::after {
  background-color: #000;
}

.hamburger-box {
  width: 40px;
  height: 24px;
  display: inline-block;
  position: relative;
}

.hamburger-inner {
  display: block;
  top: 50%;
  margin-top: -2px;
}
.hamburger-inner,
.hamburger-inner::before,
.hamburger-inner::after {
  width: 40px;
  height: 4px;
  background-color: #000;
  border-radius: 4px;
  position: absolute;
  transition-property: transform;
  transition-duration: 0.15s;
  transition-timing-function: ease;
}
.hamburger-inner::before,
.hamburger-inner::after {
  content: "";
  display: block;
}
.hamburger-inner::before {
  top: -10px;
}
.hamburger-inner::after {
  bottom: -10px;
}

/*
   * Minus
   */
.hamburger--minus .hamburger-inner::before,
.hamburger--minus .hamburger-inner::after {
  transition: bottom 0.08s 0s ease-out, top 0.08s 0s ease-out, opacity 0s linear;
}

.hamburger--minus.is-active .hamburger-inner::before,
.hamburger--minus.is-active .hamburger-inner::after {
  opacity: 0;
  transition: bottom 0.08s ease-out, top 0.08s ease-out, opacity 0s 0.08s linear;
}

.hamburger--minus.is-active .hamburger-inner::before {
  top: 0;
}

.hamburger--minus.is-active .hamburger-inner::after {
  bottom: 0;
}

@media (min-width: 768px) {
  nav ul.flexContainer {
    display: flex;
    flex-direction: row;
    position: static;
    width: auto;
    height: auto;
    padding: 0;
  }
  .hamburger {
    display: none;
  }
}
/* ---------------------- */
/* ------ A propos ------ */
/* ---------------------- */
article.flexContainer {
  padding: 2rem 0;
}

#a-propos article > *,
#services article > {
  flex: 1 1 0;
  margin: 0 2rem;
}

/* --------- SERVICES ---------*/
#services article.flexContainer {
  flex-direction: row-reverse;
  /* sondan basa ayni sirada dizer */
}
#services iframe {
  object-fit: cover;
  /* tamamini kapsa */
  height: 100%;
  width: 100%;
}
.animeToi.slideLeft {
  transform: translateX(-200px);
  opacity: 0.2;
  transition: all 1s ease;
}

.animeToi.slideLeft.active {
  transform: translateX(0px);
  opacity: 1;
}
/* ---------------------- */
/* -------- Transition --------*/
/* ---------------------- */

div.transition {
  background: url(/img/kate-bezzubets-dUZw_O9SsPI-unsplash.jpg) no-repeat fixed
    center center;
  background-size: cover;
  filter: sepia(80%);
  font-size: 3.8rem;
  text-align: center;
  color: #ccc;
  padding: 60px;
  transition: filter 0.8s ease, color 0.8s ease-in 0.5s,
    padding 0.8s ease-out 0.7s;
}
div.transition h3 {
  transition: all 1s ease 0.8s;
  filter: blur(10px);
}
.transition:hover {
  filter: sepia(0%);
  color: #000;
  padding: 100px;
}

div.transition:hover h3 {
  filter: blur(0px);
}

/* ---------------------- */
/* --------- Galerie ---------- */
/* ---------------------- */

.container {
  display: grid;
  /* The element behaves like a block element and lays 
  out its content according to the grid model. */
  grid-template-columns: 1fr 1fr 1fr 1fr;
  grid-template-rows: 1fr 1fr 1fr;
  gap: 4px 4px;
  grid-template-areas:
    "zone1 zone1 zone1 zone2"
    "zone3 zone3 zone4 zone4"
    "zone5 zone6 zone6 zone6";
}

#galerie figure {
  position: relative;
  margin: 0;
  overflow: hidden;
}

#galerie figure img {
  object-fit: cover;
  width: 100%;
  height: 100%;
}

.zone1 {
  grid-area: zone1;
}
.zone2 {
  grid-area: zone2;
}
.zone3 {
  grid-area: zone3;
}
.zone4 {
  grid-area: zone4;
}
.zone5 {
  grid-area: zone5;
}
.zone6 {
  grid-area: zone6;
}

#galerie figcaption {
  position: absolute;
  text-align: center;
  top: 50%;
  left: 0;
  height: 0;
  overflow: hidden;
  width: 100%;
  background-color: rgba(0, 0, 0, 0.7);
  color: #fff;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  /* opacity: 0;
  transition: opacity 0.8s ease; */
  transition: all 0.8s ease;
}

#galerie figure:hover figcaption {
  /* opacity: 1; */
  top: 0;
  height: 100%;
}

figcaption a {
  color: yellow;
}

figcaption::after {
  content: "";
  display: block;
  width: 60px;
  height: 60px;
  background-color: yellow;
  border-radius: 50px;
  position: absolute;
  right: 30px;
  top: 30px;
}

/***************/
/** temoignages**/
/**************/
section#temoignages {
  background-color: paleturquoise;
  flex-flow: row wrap;
  /* ayni hizaya sigmayanlari alta sirala */
  justify-content: center;
  padding: 4rem;
}
#temoignages > h2 {
  flex: 1 1 100%;
  /* flex-grow -> 1,2 
      flex-shrink ->0,1
      flex-basis -> bosluklar auto, 0, 200 */
  margin: 0 2rem 5rem;
  text-align: center;
}
#temoignages article {
  background-color: peachpuff;
  flex: 1 1 calc(100% - 2rem);
  margin: 1rem;
  position: relative;
  padding: 50px 2rem 2rem;
}
#temoignages figure {
  border-radius: 50%;
  overflow: hidden;
  width: 100px;
  height: 100px;
  position: absolute;
  top: -50px;
  left: calc(50% - 50px);
  margin: 0;
}
#temoignages figure img {
  object-fit: cover;
  height: 100%;
  width: 100%;
}
@media (min-width: 768px) {
  #temoignages article {
    flex: 1 1 calc(50% - 2rem);
  }
}
@media (min-width: 980px) {
  #temoignages article {
    flex: 1 1 200px;
    max-width: 350px;
  }
}
/*************/
/*** Expos */
/***********/
section#expos {
  padding: 3rem;
}
section#expos > * {
  flex: 1 1 0;
}
section#expos > figure {
  flex-grow: 2;
  margin: 0;
  max-height: 60vh;
}
#expos figure img {
  object-fit: cover;
  width: 100%;
  height: 100%;
}
/**************/
footer {
  background-color: #111;
  padding: 3rem;
  color: #fff;
}
footer > * {
  flex: 1 1 0;
}
footer img {
  max-height: 180px;
}
